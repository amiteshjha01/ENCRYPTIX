import tkinter as tk
from tkinter import messagebox

class Task:
    def __init__(self, description):
        self.description = description
        self.is_done = False

    def mark_done(self):
        self.is_done = True

    def __str__(self):
        status = "Done" if self.is_done else "Not Done"
        return f"{self.description} - {status}"


class TodoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, description):
        self.tasks.append(Task(description))

    def update_task(self, index, description):
        if 0 <= index < len(self.tasks):
            self.tasks[index].description = description

    def mark_task_done(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks[index].mark_done()

    def delete_task(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks.pop(index)

    def list_tasks(self):
        for i, task in enumerate(self.tasks):
            print(f"{i + 1}. {task}")


class TodoListApp:
    def __init__(self, root):
        self.todo_list = TodoList()
        self.root = root
        self.root.title("To-Do List Application")

        self.frame = tk.Frame(root)
        self.frame.pack(pady=10)

        self.task_entry = tk.Entry(self.frame, width=50)
        self.task_entry.grid(row=0, column=0, padx=10)
        self.add_button = tk.Button(self.frame, text="Add Task", command=self.add_task)
        self.add_button.grid(row=0, column=1)

        self.tasks_listbox = tk.Listbox(self.frame, width=50, height=10)
        self.tasks_listbox.grid(row=1, column=0, columnspan=2, pady=10)
        self.tasks_listbox.bind("<Double-1>", self.mark_task_done)

        self.update_button = tk.Button(self.frame, text="Update Task", command=self.update_task)
        self.update_button.grid(row=2, column=0, columnspan=2)

        self.delete_button = tk.Button(self.frame, text="Delete Task", command=self.delete_task)
        self.delete_button.grid(row=3, column=0, columnspan=2)

    def add_task(self):
        description = self.task_entry.get()
        if description:
            self.todo_list.add_task(description)
            self.update_listbox()
            self.task_entry.delete(0, tk.END)

    def update_task(self):
        selected_index = self.tasks_listbox.curselection()
        if selected_index:
            new_description = self.task_entry.get()
            if new_description:
                self.todo_list.update_task(selected_index[0], new_description)
                self.update_listbox()
                self.task_entry.delete(0, tk.END)

    def mark_task_done(self, event):
        selected_index = self.tasks_listbox.curselection()
        if selected_index:
            self.todo_list.mark_task_done(selected_index[0])
            self.update_listbox()

    def delete_task(self):
        selected_index = self.tasks_listbox.curselection()
        if selected_index:
            self.todo_list.delete_task(selected_index[0])
            self.update_listbox()

    def update_listbox(self):
        self.tasks_listbox.delete(0, tk.END)
        for task in self.todo_list.tasks:
            self.tasks_listbox.insert(tk.END, str(task))


if __name__ == "__main__":
    root = tk.Tk()
    app = TodoListApp(root)
    root.mainloop()
